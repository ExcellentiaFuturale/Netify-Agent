# Debian build
#-------------

.debian_build:
  stage: build
  image: $OS_IMAGE
  before_script:
    # Manually pull in submodules, the GIT_SUBMODULE_STRATEGY variable in GitLab is quirky
    - apt update
    - env DEBIAN_FRONTEND=noninteractive apt install -y git
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    # Build environment
    - apt update
    - env DEBIAN_FRONTEND=noninteractive apt install -y rsync debhelper autoconf automake bc build-essential libtool wget pkg-config git
    #- env DEBIAN_FRONTEND=noninteractive apt install -y libcurl4-openssl-dev libmnl-dev libncurses5-dev libnetfilter-conntrack-dev libpcap-dev libtcmalloc-minimal4 libtool zlib1g-dev systemd $OS_EXTRA_PACKAGES
    - env DEBIAN_FRONTEND=noninteractive apt install -y libcurl4-openssl-dev libmnl-dev libncurses5-dev libnetfilter-conntrack-dev libpcap-dev libgoogle-perftools-dev libtool zlib1g-dev systemd $OS_EXTRA_PACKAGES
    # Build packages
    - ./autogen.sh
    - ./configure --prefix=/usr --includedir=\${prefix}/include --mandir=\${prefix}/share/man --sysconfdir=/etc --localstatedir=/var
    - make -C deploy/debian
    - cp deploy/debian/debian.changelog debian/changelog
    - cp deploy/debian/debian.control-ci debian/control
    - cp deploy/debian/debian.init debian/init
    - cp deploy/debian/debian.postinst debian/postinst
    - cp deploy/debian/debian.rules-ci debian/rules
    - cp deploy/debian/netifyd.dsc debian/netifyd.dsc
    - cp deploy/debian/netifyd.install debian/netifyd.install
    - cp deploy/debian/netifyd-dev.install debian/netifyd-dev.install
    - dpkg-buildpackage -b
    # Push build to master node
    - mkdir -p builds/$CI_PROJECT_NAME/$OS_NAME/$OS_VERSION/$OS_ARCH
    - mv -v ../*.deb builds/$CI_PROJECT_NAME/$OS_NAME/$OS_VERSION/$OS_ARCH
    - rsync -rtv builds/* master-mirror.egloo.ca::netify-builds/
  artifacts:
    when: always
    paths:
    - builds
    expire_in: 1 day

# RPM build
#----------

.rpmos_build:
  stage: build
  image: $RPMOS_IMAGE
  before_script:
    # Manually pull in submodules, the GIT_SUBMODULE_STRATEGY variable in GitLab is quirky
    - yum install -y git
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    # Build environment
    - yum -y install wget
    - wget --no-check-certificate https://dl.fedoraproject.org/pub/epel/epel-release-latest-${RPMOS_VERSION}.noarch.rpm
    - yum -y install epel-release-latest-${RPMOS_VERSION}.noarch.rpm
    - yum -y install make rpm-build which expect yum-utils sudo autoconf gcc gcc-c++ automake libtool rsync bc git
    - yum -y install $RPMOS_REPOS curl-devel libmnl-devel libnetfilter_conntrack-devel libpcap-devel zlib-devel
    # Build via raw source only
    - grep ^Version netifyd.spec | sed 's/.*[[:space:]]//' > /tmp/version
    - tar --exclude=.git --transform "s,^,netifyd-`cat /tmp/version`/," -czf netifyd-`cat /tmp/version`.tar.gz *
    # Build packages
    - echo "%dist .os${RPMOS_VERSION}" > ~/.rpmmacros
    - rpmbuild -bs netifyd.spec  --define "_sourcedir $PWD" --define "_srcrpmdir $PWD"
    - rpmbuild --rebuild *.src.rpm
    # Copy packages to mirror
    - mkdir -p builds/netify/$RPMOS_OS/$RPMOS_VERSION/devel/$RPMOS_ARCH
    - mkdir -p builds/netify/$RPMOS_OS/$RPMOS_VERSION/devel/source
    - mv -v ~/rpmbuild/RPMS/$RPMOS_ARCH/*.rpm builds/netify/$RPMOS_OS/$RPMOS_VERSION/devel/$RPMOS_ARCH/
    - mv -v *.src.rpm builds/netify/$RPMOS_OS/$RPMOS_VERSION/devel/source/
    # Push build to master node
    - rsync -rtv builds/* master-mirror.egloo.ca::netify/
  artifacts:
    when: always
    paths:
    - builds
    expire_in: 1 day

# FreeBSD Build
#--------------

.xbsd_build:
  stage: build
  before_script:
    # Manually pull in submodules, the GIT_SUBMODULE_STRATEGY variable in GitLab is quirky
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    # Build environment
    - ntpdate -d -u time.nist.gov
    - ntpdate -u time.nist.gov
    # Build packages
    - ./autogen.sh
    - ./configure --disable-conntrack --disable-inotify $OS_CONFIGURE_FLAGS CC=clang CXX=clang++ MAKE=gmake
    - mkdir -p /usr/ports/distfiles
    - gmake $OS_MAKE_TARGET
    - gmake deploy-pfsense
    # Push build to master mirror
    - mkdir -p builds/$CI_PROJECT_NAME/$OS_BASENAME/$OS_VERSION.$OS_RELEASE/$OS_ARCH/
    - mv deploy/$OS_BASENAME/work/pkg/*.$OS_PKG_EXTENSION builds/$CI_PROJECT_NAME/$OS_BASENAME/$OS_VERSION.$OS_RELEASE/$OS_ARCH/
    - mv deploy/pfsense/work/pkg/*.$OS_PKG_EXTENSION builds/$CI_PROJECT_NAME/$OS_BASENAME/$OS_VERSION.$OS_RELEASE/$OS_ARCH/
    - rsync -rtv builds/* master-mirror.egloo.ca::netify-builds/
  allow_failure: true

