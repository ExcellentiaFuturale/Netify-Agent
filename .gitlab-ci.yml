# -----------------------------------------------------------
# Definitions
# -----------------------------------------------------------

stages:
  - Build
  - Test
  - Package
  - Variants

include:
  - project: "netify.ai/public/netify-development-support/\
              netify-ci-templates"
    ref: master
    file:
      - /gitlab/agent/build-templates.yml
      - /gitlab/agent/test-templates.yml
      - /gitlab/common/package-templates.yml
      - /gitlab/agent/variants-templates.yml

variables:
  GIT_SUBMODULE_STRATEGY: recursive
#  CI_DEBUG_TRACE: "true"

# -----------------------------------------------------------
# Build stage
# -----------------------------------------------------------

# Debian OS Targets

Debian/10/x86-64:
  extends: .debian_build
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "debian"
    OS_VERSION: "10"
    OS_IMAGE: "debian:10"
    OS_ARCH: "amd64"
    OS_ARCH_PATH:
      value: $OS_ARCH
      expand: true
    OS_EXTRA_PACKAGES: "flex"

Debian/11/x86-64:
  extends: .debian_build
  tags:
    - docker
  variables:
    OS_NAME: "debian"
    OS_VERSION: "11"
    OS_IMAGE: "debian:11"
    OS_ARCH: "amd64"
    OS_ARCH_PATH:
      value: $OS_ARCH
      expand: true
    OS_EXTRA_PACKAGES: ""

Debian/11/x86-32:
  extends: .debian_build
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "debian"
    OS_VERSION: "11"
    OS_IMAGE: "i386/debian:11"
    OS_ARCH: "i386"
    OS_ARCH_PATH:
      value: $OS_ARCH
      expand: true
    OS_EXTRA_PACKAGES: "byacc flex"

# Ubuntu OS Targets

Ubuntu/20.04/x86-64:
  extends: .debian_build
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "ubuntu"
    OS_VERSION: "focal"
    OS_IMAGE: "ubuntu:20.04"
    OS_ARCH: "amd64"
    OS_ARCH_PATH:
      value: "binary-$OS_ARCH"
      expand: true
    OS_EXTRA_PACKAGES: "byacc"

Ubuntu/22.04/x86-64:
  extends: .debian_build
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "ubuntu"
    OS_VERSION: "jammy"
    OS_IMAGE: "ubuntu:22.04"
    OS_ARCH: "amd64"
    OS_ARCH_PATH:
      value: "binary-$OS_ARCH"
      expand: true
    OS_EXTRA_PACKAGES: "byacc flex"

# RPM OS Targets

CentOS/7/x86-64:
  extends: .rpmos_build
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "centos"
    OS_VERSION: "7"
    OS_IMAGE: "centos:7.9.2009"
    OS_ARCH: "x86_64"
    OS_REPOS: ""
    OS_EXTRA_PACKAGES: ""

Rocky Linux/8/x86-64:
  extends: .rpmos_build
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "rockylinux"
    OS_VERSION: "8"
    OS_IMAGE: "rockylinux:8"
    OS_ARCH: "x86_64"
    OS_REPOS: "--enablerepo=powertools,epel"
    OS_EXTRA_PACKAGES: ""

AlmaLinux/8/x86-64:
  extends: .rpmos_build
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "almalinux"
    OS_VERSION: "8"
    OS_IMAGE: "almalinux:8"
    OS_ARCH: "x86_64"
    OS_REPOS: "--enablerepo=powertools,epel"
    OS_EXTRA_PACKAGES: ""

AlmaLinux/9/x86-64:
  extends: .rpmos_build
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "almalinux"
    OS_VERSION: "9"
    OS_IMAGE: "almalinux:9"
    OS_ARCH: "x86_64"
    OS_REPOS: "--enablerepo=crb"
    OS_EXTRA_PACKAGES: ""

# OpenWrt OS Targets

OpenWrt/19.07/x86-64:
  extends: .openwrt_build
  tags:
    - docker
  variables:
    OS_IMAGE: "debian:11"
    OS_NAME: "debian"
    OS_VERSION: "11"
    OS_ARCH: "amd64"
    OS_EXTRA_PACKAGES: "ncurses-dev gawk unzip python"
    OPENWRT_VERSION: "19.07.10"
    OPENWRT_ARCH1: "x86/64"
    OPENWRT_ARCH2: "x86-64"
    OPENWRT_ARCH3: "x86_64"
    OPENWRT_SDK:
      value: "https://downloads.openwrt.org/releases/\
              ${OPENWRT_VERSION}/targets/${OPENWRT_ARCH1}/\
              openwrt-sdk-${OPENWRT_VERSION}-${OPENWRT_ARCH2}\
              _gcc-7.5.0_musl.Linux-${OPENWRT_ARCH3}.tar.xz"
      expand: true
    OPENWRT_CONFIG: "https://downloads.openwrt.org/releases/\
                     ${OPENWRT_VERSION}/targets/\
                     ${OPENWRT_ARCH1}/config.buildinfo"

# -----------------------------------------------------------
# Package stage
# -----------------------------------------------------------

Archive Source:
  extends: .pkg_source
  tags:
    - docker
  variables:
    OS_NAME: "debian"
    OS_VERSION: "11"
    OS_IMAGE: "debian:11"
    OS_ARCH: "amd64"
    OS_EXTRA_PACKAGES: ""
  needs: ["debian 11 build"]

# -----------------------------------------------------------
# Test stage
# -----------------------------------------------------------

# CentOS

CentOS/7/Test:
  extends: .rpmos_test
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "centos"
    OS_VERSION: "7"
    OS_IMAGE: "centos:7.9.2009"
    OS_ARCH: "x86_64"
    OS_UUID: "NE-CE-07-X1"
  needs: ["centos 7 build"]

AlmaLinux/8/Test:
  extends: .rpmos_test
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "almalinux"
    OS_VERSION: "8"
    OS_IMAGE: "almalinux:8"
    OS_ARCH: "x86_64"
    OS_UUID: "NE-CE-08-X1"
  needs: ["almalinux 8 build"]

# -----------------------------------------------------------
# Variants stage
# -----------------------------------------------------------

# CentOS

ClearOS/7/x86-64:
  extends: .rpmos_variants
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "clearos"
    OS_SOURCE: "centos"
    OS_VERSION: "7"
    OS_IMAGE: "centos:7"
    OS_ARCH: "x86_64"
  needs: ["centos 7 test"]

NethServer/7/x86-64:
  extends: .rpmos_variants
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "nethserver"
    OS_SOURCE: "centos"
    OS_VERSION: "7"
    OS_IMAGE: "centos:7"
    OS_ARCH: "x86_64"
  needs: ["centos 7 test"]

RHEL/7/x86-64:
  extends: .rpmos_variants
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "rhel"
    OS_SOURCE: "centos"
    OS_VERSION: "7"
    OS_IMAGE: "centos:7.9.2009"
    OS_ARCH: "x86_64"
  needs: ["centos 7 test"]

RHEL/8/x86-64:
  extends: .rpmos_variants
  tags:
    - docker
  only:
    - tags
    - web
  variables:
    OS_NAME: "rhel"
    OS_SOURCE: "almalinux"
    OS_VERSION: "8"
    OS_IMAGE: "almalinux:8"
    OS_ARCH: "x86_64"
  needs: ["almalinux 8 test"]
